{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["getTime","Date","toUTCString","slice","Clock","state","time","timerId","this","window","setInterval","setState","console","info","prevProps","clockName","props","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","hasClock","handleRightClick","event","preventDefault","handleLeftClick","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MAUA,SAASA,IAGP,OAFa,IAAIC,MAELC,cAAcC,OAAO,IAAK,GAGjC,IAAMC,EAAb,4MACEC,MAAyB,CACvBC,KAAMN,KAFV,EAKEO,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEL,KAAMN,MAEtBS,OAAOG,QAAQC,KAAK,EAAKR,MAAMC,QAC9B,OAZP,gCAeE,SAAmBQ,GACbA,EAAUC,YAAcP,KAAKQ,MAAMD,WACrCN,OAAOG,QAAQK,MAAf,uBAAqCH,EAAUC,UAA/C,eAA+DP,KAAKQ,MAAMD,cAjBhF,kCAqBE,WACEN,OAAOS,cAAcV,KAAKD,WAtB9B,oBAyBE,WACE,IAAQQ,EAAcP,KAAKQ,MAAnBD,UACAT,EAASE,KAAKH,MAAdC,KAER,OACE,sBAAKa,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGb,WAtCX,GAA2Bc,aCZ3B,SAASC,IACP,IAAMC,EAAQrB,KAAKsB,MAAMC,WAAWrB,OAAO,GAE3C,MAAM,SAAN,OAAgBmB,GAQX,IAAMG,EAAb,4MACEpB,MAAyB,CACvBqB,UAAU,EACVX,UAAW,WAHf,EAMER,QAAU,EANZ,EAwBEoB,iBAAmB,SAACC,GAClBA,EAAMC,iBACN,EAAKlB,SAAS,CAAEe,UAAU,KA1B9B,EA6BEI,gBAAkB,SAACF,GACjBA,EAAMC,iBACN,EAAKlB,SAAS,CAAEe,UAAU,KA/B9B,uDAQE,WAAqB,IAAD,OAClBK,SAASC,iBAAiB,cAAexB,KAAKmB,kBAC9CI,SAASC,iBAAiB,QAASxB,KAAKsB,iBAExCtB,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEI,UAAWM,QAC1B,QAdP,kCAiBE,WACEZ,OAAOS,cAAcV,KAAKD,SAE1BwB,SAASE,oBAAoB,cAAezB,KAAKmB,kBACjDI,SAASE,oBAAoB,QAASzB,KAAKsB,mBArB/C,oBAkCE,WACE,MAAgCtB,KAAKH,MAA7BqB,EAAR,EAAQA,SAAUX,EAAlB,EAAkBA,UAElB,OACE,sBAAKI,UAAU,MAAf,UACE,6CACCO,GAAY,cAAC,EAAD,CAAOX,UAAWA,WAxCvC,GAAyBK,aCZzBc,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.ac6e0e9b.chunk.js","sourcesContent":["import { Component } from 'react';\n\ninterface State {\n  time: string;\n}\n\ninterface Props {\n  clockName: string;\n}\n\nfunction getTime(): string {\n  const date = new Date();\n\n  return date.toUTCString().slice(-12, -4);\n}\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    time: getTime(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ time: getTime() });\n\n      window.console.info(this.state.time);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.clockName !== this.props.clockName) {\n      window.console.debug(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { clockName } = this.props;\n    const { time } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {time}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ninterface State {\n  hasClock: boolean;\n  clockName: string;\n}\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.handleRightClick);\n    document.addEventListener('click', this.handleLeftClick);\n\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n\n    document.removeEventListener('contextmenu', this.handleRightClick);\n    document.removeEventListener('click', this.handleLeftClick);\n  }\n\n  handleRightClick = (event: Event) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  handleLeftClick = (event: Event) => {\n    event.preventDefault();\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}